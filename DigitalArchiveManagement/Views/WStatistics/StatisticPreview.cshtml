
@{
    ViewData["Title"] = "统计结果预览";
}


@section head {
    <link href="~/lib/bootstrap-table/css/bootstrap-table.css" rel="stylesheet" />
    <link href="~/css/table-checkbox.css" rel="stylesheet" />
    <link href="~/css/arch-button.css" rel="stylesheet" />
}

@section body {
    <div class="container-fluid">
        <div id="archCrudToolbar">
            <button type="button" id="catalogAddBtn" class="btn btn-archbutton" style="border-color:#99D1FF;" onclick="printTable();"><i class="glyphicon glyphicon-print"></i> 打印结果</button>

            <div class="btn-group" id="catalogDelBtn">
                <button type="button" class="btn btn-archbutton" style="border-color:#99D1FF;" onclick="exportTable();"><i class="glyphicon glyphicon-export"></i> 导出至EXCEL</button>
                <button type="button" class="btn btn-archbutton dropdown-toggle" data-toggle="dropdown" style="border-color:#99D1FF;" aria-haspopup="true" aria-expanded="false">
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu">
                    @*<li><a href="#" onclick="exportAll();"><i class="glyphicon glyphicon-export"></i> 导出所有页数据至EXCEL</a></li>*@
                    <li><a href="#" onclick="exportAll();"><i class="glyphicon glyphicon-export"></i> 导出所有页数据至EXCEL</a></li>
                </ul>
                <iframe id="downloadFrame" style="display:none;"></iframe>
            </div>
        </div>

        <div class="specified-table">
            <table id="statisticResultgrid"></table>
        </div>

    </div>
    <script>
        var cols = '';//全局变量，显示的列名
        var sc;
        var sfieldStr = '';//被统计字段。如果是多个被统计字段，则多个字段以“_”连在一块儿
        var paramList = '';//sql参数的JSON
        var sqlStr = '';//所有统计结果使用的sql JSON

        $(function () {
            sc = parent.tempStatisticCondition;//访问父页面的参数（传参）
            //搜索条件或统计字段或分组字段未配置时
            if (JSON.stringify(sc.searchCondition) == '{}' || JSON.stringify(sc.statisticFields) == '{}' || JSON.stringify(sc.groupFields) == '{}') {
                parent.statisticAlert('搜索条件或统计字段或分组字段未配置，请配置后继续！');
                return;
            }

            for (var i = 0; i < sc.statisticFields.length; i++) {
                if (i == 0) {
                    sfieldStr += sc.statisticFields[i].show_name;
                }
                else {
                    sfieldStr += "_" + sc.statisticFields[i].show_name;
                }
            }

            if (sc.isNumStatistic) {//为数量统计时，加上后面的文字补充说明
                if (sc.isSum) {
                    sfieldStr += " 的和";
                }
                else {
                    sfieldStr += " 的数目";
                }
            }

            //动态生成统计表格的显示字段
            cols = '[';
            for (var i = 0; i < sc.groupFields.length; i++) {
                cols += '{ "field": "' + sc.groupFields[i].col_name + '", "title": "' + sc.groupFields[i].show_name + '"},';
            }
            cols += '{ "field": "ct", "title": "' + sfieldStr + '"}';
            cols += ']';
            var url = '/WStatistics/ExecStatistic';
            loadTableData(url);
        });

        var loadTableData = function (url) {
            $('#statisticResultgrid').bootstrapTable('destroy');
            $table = $('#statisticResultgrid').bootstrapTable({
                url: url,
                method: 'POST',                      //请求方式（*）
                contentType: "application/x-www-form-urlencoded",
                silent: true, //静态刷新
                toolbar: '#archCrudToolbar',              //工具按钮用哪个容器
                striped: true,                      //是否显示行间隔色
                cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: true,                   //是否显示分页（*）
                sortable: true,                     //是否启用排序
                sortOrder: "asc",                   //排序方式
                sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1,                      //初始化加载第一页，默认第一页,并记录
                pageSize: 15,                     //每页的记录行数（*）
                pageList: [15, 30, 50, 100],        //可供选择的每页的行数（*）
                search: false,                      //是否显示表格搜索
                strictSearch: true,
                showColumns: true,                  //是否显示所有的列（选择显示的列）
                showRefresh: true,                  //是否显示刷新按钮
                minimumCountColumns: 2,             //最少允许的列数
                clickToSelect: true,                //是否启用点击选中行
                //height: 500,                      //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                uniqueId: "Unique_code",                     //每一行的唯一标识，一般为主键列
                showToggle: true,                   //是否显示详细视图和列表视图的切换按钮
                showExport: true,
                cardView: false,                    //是否显示详细视图
                detailView: false,                  //是否显示父子表
                paginationLoop: false,
                showLoading: false,
                singleSelect: false,                //true只能单选，false为多选
                exportDataType: "selected",        //导出checkbox选中的行数
                showFullscreen: true,
                useRowAttrFunc: true,
                reorderableRows: true,
                //得到查询的参数
                queryParams: function (params) {
                    //这里的键的名字和控制器的变量名必须一致，这边改动，控制器也需要改成一样的
                    var temp = {
                        table: '@ViewData["table"]',
                        pageSize: params.limit,                    //页面大小
                        pageIndex: params.offset / params.limit,   //页码
                        searchCondition: sc.searchCondition, //搜索条件的数据
                        statisticFields: sc.statisticFields, //统计字段的数据
                        groupFields: sc.groupFields, //分组字段的数据
                        isNumStatistic: sc.isNumStatistic,//是否统计数量
                        isSum: sc.isSum//在统计数量时，是统计去重后的数目，还是统计总数
                    };
                    return temp;
                },
                columns: [
                    JSON.parse(cols)//技巧：cols被设置为JSON字符串后，转换成JS对象
                ],
                onLoadSuccess: function (data) {
                    paramList = data.prm;
                    sqlStr = data.sql;
                    $("#h_loading_mask").css("display", "none");//加载成功后关闭加载提示
                    $("#h_loading").css("display", "none");
                },
                formatLoadingMessage: function () {
                    return "请稍等，正在加载中···";
                },
            });
        }

        var printTable = function () {
            var printData = $('#statisticResultgrid').parent().html();
            window.document.body.innerHTML = printData;
            window.print();
            window.location.reload(true);
        }

        var exportTable = function () {
            var localTime = new Date().toLocaleString();
            //导出Excel的选项设置
            var options = {
                //Excel样式
                excelstyles: [],
                //Excel文件名称
                fileName: '统计结果--' + sfieldStr + localTime
            };

            jQuery.extend(true, options, { type: 'xlsx'});
            $('#statisticResultgrid').tableExport(options);
        }

        var exportAll = function () {
            //console.log(JSON.stringify(paramList)); console.log(sqlStr);
            var file = '全部统计结果--' + sfieldStr;
            var r = '/WStatistics/ExptDtToExcl/' + file + '/' + encode(JSON.stringify(paramList)) + '/' + encode(sqlStr);//使参数从字符串转换为BASE64码
            $('#downloadFrame').attr('src',r);
        }

        function encode(str) {
            // 对字符串进行编码
            var encode = encodeURI(str);
            // 对编码的字符串转化base64
            var base64 = btoa(encode);
            return base64;
        }
        // base64转字符串
        function decode(base64) {
            // 对base64转编码
            var decode = atob(base64);
            // 编码转字符串
            var str = decodeURI(decode);
            return str;
        }
    </script>
}

@section script {
    <script src="~/lib/bootstrap-table/js/bootstrap-table.js"></script>
    <script src="~/lib/bootstrap-table/js/bootstrap-table-zh-CN.js"></script>
    <script src="~/lib/bootstrap-print/bootstrap-table-print.min.js"></script>
    <script src="~/lib/bootstrap-export/tableExport.js"></script>
    <script src="~/lib/bootstrap-export/FileSaver.min.js"></script>
    <script src="~/lib/bootstrap-export/xlsx.core.min.js"></script>
    <script src="~/lib/modal-panel/pop.min.js"></script>
    <script src="~/js/modalwindow.js"></script>
}



