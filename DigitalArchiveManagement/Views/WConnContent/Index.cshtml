
@{
    ViewData["Title"] = "目录挂接原文";
}

@section head {
    <link href="~/lib/bootstrap-table/css/bootstrap-table.css" rel="stylesheet" />
}

@section body {
    <div class="container-fluid">
        <div class="alert alert-warning" style="margin-top:10px;font-size:13px;">
            <i class="fa fa-volume-up"></i><strong>说明：</strong>
            1、请注意挂接所支持的原文格式，然后选择原文所存放的路径或文件夹；2、挂接原文的格式可更改，方法：管理配置->档案类型库配置，在相应的类型库后选择“修改”；3、若原文类型为JPG、TIFF等图片格式，请确保存放图片的文件夹名称为对应的档号，否则会挂接失败。
        </div>
        <div class="form-inline">
            <input id="pickedPath" type="text" class="form-control" placeholder="点击选择档案原文所在路径..." style="width: calc(100% - 130px);" autocomplete="off" />
            <button class="btn btn-primary" id="executeConBtn">开始原文挂接</button>
        </div>

        <div style="height:calc(100% - 200px)">
            <div id="toolbarconn" class="btn-group">
                <h4><span class="label label-warning">挂接记录如下表格</span></h4>
            </div>
            <table id="contentConnRecgrid"></table>
        </div>
    </div>

    <script>
        $(function () {

            $("#h_loading_mask").css("display", "none");//关闭页面加载指示器
            $("#h_loading").css("display", "none");

            var hascontent = @ViewData["HasContent"];
            if (hascontent == false || hascontent == 'false') {
                HM.alertWin('此档案类型库未配置有原文，故无法挂接！');
                return;
            }
            else {
                $.ajax({
                   type: 'POST',
                   url: "/WConnContent/GetContentTp",//获取原文具体类型20200518
                   data: { key: '@ViewData["ContentType"]',table: '@ViewData["TableName"]'},
                   dataType: "JSON",
                    success: function (data) {
                        var pp = $('#pickedPath');
                        if (data.field == '') {
                            var showInfo = '此档案类型库还未配置原文类型或原文根路径，请在配置管理中的“档案类型库”中配置后继续。';
                            HM.alertWin(showInfo);//added on 20201014
                            pp.attr('placeholder',showInfo);
                        }
                        else {
                            var ywroot = data.value;
                            var showInfo = '原文类型为“'+ data.field +'”，原文根路径已配置为“'+ data.value +'”，点击选择档案原文所在路径...';
                            if (ywroot == '' || ywroot == null) {
                                showInfo = '原文类型为“' + data.field + '，原文根路径还未配置，请在配置管理中的“档案类型库”中配置后再挂接原文！';
                                HM.alertWin(showInfo);//added on 20201014
                            }
                            pp.attr('placeholder',showInfo);
                        }
                    }
                });
            }

            $("#executeConBtn").bind('click', executeCon);
            $("#pickedPath").bind('click', pickPath);

            showConnRcdsData();

        });

        var pickPath = function () {
            var content = "<iframe id='pickPathFrame' src='/WConnContent/PickPathView' style='border:0;width:100%;height:100%;'></iframe>";
            HM.dealwin(content, 960, 560, '选择原文路径窗口');
        }

        var closeDealWin = function () {
            pop.close("deal-win");
        }

        var executeCon = function () {
            var p = $("#pickedPath").val();
            if ($.trim(p) == '') {
                HM.alertWin('原文所在路径还未选择，选择后继续！');
                return;
            }
            HM.confirmWin('', '已选原文所在位置为' + p + '，请确保原文所对应目录已生成档号。确认挂接吗？', '确认挂接', 'cconn', addConnectRcds);
        }

        var addConnectRcds = function (id) {
            $.ajax({
                type: 'POST',
                url: "/WConnContent/AddConnRecds",
                data: { table: '@ViewData["TableName"]', datafrom: $("#pickedPath").val(), userid: '@ViewData["UserId"]' },
                //data: { cttype: '@ViewData["ContentType"]', table: '@ViewData["TableName"]', datafrom: $("#pickedPath").val(), userid:'@ViewData["UserId"]' },
                dataType: "JSON",
                success: function (data) {
                    if (data.rst == 0) {
                        pop.close('confirm-win_cconn');
                        HM.alertWin(data.info);
                        return;
                    }
                    else {
                        pop.close('confirm-win_cconn');
                        //HM.hintWin(data.info);
                        //显示挂接记录表
                        showConnRcdsData();
                        //实施挂接
                        makeConnExecute(data.id, data.dhfield, data.rootpath);
                        return;
                    }
                }
            });
        }

        var makeConnExecute = function (uniquecode, dhfield, rootpath) {
            $.ajax({
                type: 'POST',
                url: "/WConnContent/CatalogConnContentWork",
                data: { cttype: '@ViewData["ContentType"]', table: '@ViewData["TableName"]', datafrom: $("#pickedPath").val(), userid: '@ViewData["UserId"]', uniquecode: uniquecode, archiveNoFieldName: dhfield, ywrootPath: rootpath },
                dataType: "JSON",
                success: function (data) {
                    if (data.rst == 1) {
                        $('#contentConnRecgrid').bootstrapTable('refresh');//挂接完成后更新挂接状态
                    }
                }
            });
        }

        var showConnRcdsData = function () {
            HM.pageLoading();
            $('#contentConnRecgrid').bootstrapTable('destroy');
            $table = $('#contentConnRecgrid').bootstrapTable({
                url: '/WConnContent/ShowConnRcds',                      //请求后台的URL（*）
                method: 'POST',                      //请求方式（*）
                contentType: "application/x-www-form-urlencoded",
                silent: true, //静态刷新
                toolbar: '#toolbarconn',              //工具按钮用哪个容器
                striped: true,                      //是否显示行间隔色
                cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                sortable: true,                     //是否启用排序
                sortOrder: "asc",                   //排序方式
                pagination: true,                   //是否显示分页（*）
                sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1,                      //初始化加载第一页，默认第一页,并记录
                pageSize: 30,                     //每页的记录行数（*）
                pageList: [30, 60, 100, 200],        //可供选择的每页的行数（*）
                paginationLoop: false,
                search: false,                      //是否显示表格搜索
                strictSearch: true,
                showColumns: true,                  //是否显示所有的列（选择显示的列）
                showRefresh: true,                  //是否显示刷新按钮
                minimumCountColumns: 2,             //最少允许的列数
                clickToSelect: true,                //是否启用点击选中行
                //height: 500,                      //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                uniqueId: "Unique_code",                     //每一行的唯一标识，一般为主键列
                showToggle: true,                   //是否显示详细视图和列表视图的切换按钮
                showExport: true,
                cardView: false,                    //是否显示详细视图
                detailView: false,                  //是否显示父子表
                showLoading: false,
                singleSelect: false,                //true只能单选，false为多选
                exportDataType: "selected",        //导出checkbox选中的行数
                showFullscreen: true,
                queryParams: function (params) {
                    var temp = {
                        pageSize: params.limit,                         //页面大小
                        pageIndex: params.offset / params.limit,   //页码
                        tableName: '@ViewData["tableName"]',                         //对应的数据库表
                    };
                    return temp;
                },
                columns: [
                    { field: 'data_from', title: '数据来源' },
                    { field: 'start_time', title: '挂接开始时间' },
                    { field: 'end_time', title: '挂接结束时间' },
                    { field: 'link_status', title: '挂接状态', formatter: 'connStatusFormatter'},
                    { field: 'total_count', title: '原文文件数（个）' },
                    { field: 'success_count', title: '成功挂接文件数（个）' },
                    { field: 'operate', title: '操作', width: 80, align: 'center', valign: 'middle', formatter: 'actionFormatter' },
                ],
                formatLoadingMessage: function () {
                    return "请稍等，正在加载中···";
                },
                onLoadSuccess: function (data) {
                    //alert(JSON.stringify(data));
                    hideColByLoggedUser();
                    HM.closePageLoading();
                }
            });
        }

        //操作栏的格式化
        function actionFormatter(value, row, index) {
            var id = row.unique_code;
            var result = "";
            result += "<a href='javascript:;' class='btn btn-xs btn-danger' onclick=\"DeleteByIds('" + id + "')\" title='删除挂接记录' style='margin-right:2px;'><span class='glyphicon glyphicon-remove'></span></a>";
            return result;
        }

        function connStatusFormatter(value, row, index) {
            if (value == '0') {
                return '<span class="label label-warning">正在挂接中...</span>';
            }
            if (value == '2')    {
                return '<span class="label label-success">挂接完成</span>';
            }
            if (value == '1') {
                return '<span class="label label-danger">挂接有误</span>';
            }
        }

        function DeleteByIds(id) {
            HM.confirmWin(id, '本条挂接记录将被删除，确认？', '确认删除', 'delconnrcd', deleteConnRcd);
        }

        var deleteConnRcd = function (id) {
            HM.pageLoading();
            $.ajax({
                type: 'POST',
                url: "/WConnContent/DeleteConnRcd",
                data: { tableName: '@ViewData["tableName"]', uniqueCode: id },
                dataType: "JSON",
                success: function (data) {
                    HM.closePageLoading();
                    if (data.rst == 0) {
                        pop.close("confirm-win_delconnrcd");
                        HM.alertWin(data.info);
                        return;
                    }
                    if (data.rst == 1) {
                        pop.close("confirm-win_delconnrcd");
                        $('#contentConnRecgrid').bootstrapTable('refresh');
                        HM.hintWin(data.info);
                    }
                }
            });
        }

        var hideColByLoggedUser = function() {
            $.ajax({
               type: 'POST',
               url: "/WFunctionAccess/GetFuncAccessByUser",
               data: { userName: '@ViewData["UserId"]' },
               dataType: "JSON",
                success: function (data) {
                    //alert(JSON.stringify(data));
                    for (var i = 0; i < data.length; i++) {
                        var func = data[i].func_symble;
                        if (func == 'yw_recv_del') {
                            var vbl = data[i].func_visible;
                            if (vbl == false || vbl.toLowerCase() == 'false') {
                                $('#contentConnRecgrid').bootstrapTable('hideColumn', 'operate');
                            }
                            break;
                        }
                    }
                }
            });
        }

    </script>
}

@section script {
    <script src="~/lib/bootstrap-table/js/bootstrap-table.js"></script>
    <script src="~/lib/bootstrap-table/js/bootstrap-table-zh-CN.js"></script>
    <script src="~/lib/modal-panel/pop.min.js"></script>
    <script src="~/js/modalwindow.js"></script>
}

